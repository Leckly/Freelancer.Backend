// <auto-generated />
using System;
using Freelancer.Backend.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Freelancer.Backend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDatabaseContext))]
    [Migration("20250816151207_NewSeeds")]
    partial class NewSeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Freelancer.Backend.Domain.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Job", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 7, 17, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5575),
                            Description = "Projekt aplikacji mobilnej dla sklepu internetowego z wykorzystaniem Flutter i React Native.",
                            Name = "Rozwój aplikacji mobilnej e-commerce",
                            Price = 15000,
                            StartDate = new DateTime(2025, 7, 27, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5582),
                            Status = 0,
                            Tags = "[\"Flutter\",\"React Native\",\"E-Commerce\"]",
                            UserId = 10
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 8, 1, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5595),
                            Description = "Dodanie logowania Google i obsługi powiadomień push w aplikacji mobilnej.",
                            Name = "Integracja Firebase w aplikacji mobilnej",
                            Price = 4000,
                            StartDate = new DateTime(2025, 8, 6, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5596),
                            Status = 1,
                            Tags = "[\"Firebase\",\"Push Notifications\",\"Mobile\"]",
                            UserId = 10
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 6, 17, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5598),
                            Description = "Tworzenie skalowalnej platformy e-commerce opartej o mikroserwisy w .NET i Javie.",
                            Name = "Budowa platformy e-commerce w .NET",
                            Price = 25000,
                            StartDate = new DateTime(2025, 7, 2, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5599),
                            Status = 0,
                            Tags = "[\".NET\",\"Java\",\"Microservices\",\"E-Commerce\"]",
                            UserId = 11
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 7, 22, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5601),
                            Description = "Projekt aplikacji webowej wspierającej proces rekrutacyjny i onboarding programistów.",
                            Name = "System do zarządzania rekrutacją IT",
                            Price = 7000,
                            StartDate = new DateTime(2025, 8, 1, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5602),
                            Status = 1,
                            Tags = "[\"ASP.NET Core\",\"HRTech\",\"Recruitment\"]",
                            UserId = 12
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2025, 8, 6, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5604),
                            Description = "Budowa platformy webowej z materiałami szkoleniowymi i check-listą onboardingu.",
                            Name = "Portal onboardingowy dla nowych pracowników",
                            Price = 3000,
                            StartDate = new DateTime(2025, 8, 11, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5604),
                            Status = 0,
                            Tags = "[\"Blazor\",\"ASP.NET Core\",\"Onboarding\"]",
                            UserId = 12
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2025, 7, 7, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5608),
                            Description = "Aplikacja webowa analizująca SEO stron i generująca raporty dla klientów.",
                            Name = "System analizy SEO",
                            Price = 8000,
                            StartDate = new DateTime(2025, 7, 17, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5608),
                            Status = 1,
                            Tags = "[\"SEO\",\"WebApp\",\"Analytics\"]",
                            UserId = 13
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2025, 8, 11, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5611),
                            Description = "Implementacja modułu generowania raportów z kampanii marketingowych.",
                            Name = "Moduł raportowania danych",
                            Price = 2000,
                            StartDate = new DateTime(2025, 8, 18, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5611),
                            Status = 0,
                            Tags = "[\"Reporting\",\"SQL\",\"Dashboard\"]",
                            UserId = 13
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2025, 7, 27, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5613),
                            Description = "Tworzenie nowoczesnego UI/UX dla aplikacji bankowej w Figma.",
                            Name = "Projekt interfejsu systemu bankowego",
                            Price = 12000,
                            StartDate = new DateTime(2025, 8, 6, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5614),
                            Status = 0,
                            Tags = "[\"UI\",\"UX\",\"Figma\"]",
                            UserId = 14
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2025, 7, 29, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5615),
                            Description = "Projekt systemu do zarządzania klientami i negocjacjami handlowymi.",
                            Name = "System CRM dla firmy B2B",
                            Price = 6000,
                            StartDate = new DateTime(2025, 8, 4, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5616),
                            Status = 1,
                            Tags = "[\"CRM\",\"B2B\",\"ASP.NET Core\"]",
                            UserId = 15
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2025, 8, 9, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5619),
                            Description = "Budowa platformy e-learningowej do szkoleń sprzedażowych.",
                            Name = "Aplikacja szkoleniowa online",
                            Price = 5000,
                            StartDate = new DateTime(2025, 8, 17, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5620),
                            Status = 0,
                            Tags = "[\"E-Learning\",\"Blazor\",\"WebApp\"]",
                            UserId = 15
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2025, 6, 27, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5621),
                            Description = "Wsparcie w prowadzeniu projektu IT z wykorzystaniem Scruma i Jiry.",
                            Name = "Koordynacja projektu w Agile",
                            Price = 9000,
                            StartDate = new DateTime(2025, 7, 7, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5622),
                            Status = 1,
                            Tags = "[\"Agile\",\"Scrum\",\"Jira\"]",
                            UserId = 16
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2025, 7, 25, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5624),
                            Description = "Analiza luk bezpieczeństwa i wdrożenie rozwiązań DevSecOps.",
                            Name = "Audyt bezpieczeństwa aplikacji webowej",
                            Price = 11000,
                            StartDate = new DateTime(2025, 8, 1, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5625),
                            Status = 0,
                            Tags = "[\"Security\",\"DevSecOps\",\"PenTest\"]",
                            UserId = 17
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2025, 8, 4, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5627),
                            Description = "Implementacja Prometheus i Grafana do monitorowania infrastruktury.",
                            Name = "System monitoringu serwerów",
                            Price = 5000,
                            StartDate = new DateTime(2025, 8, 9, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5627),
                            Status = 1,
                            Tags = "[\"Monitoring\",\"Prometheus\",\"Grafana\"]",
                            UserId = 17
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2025, 7, 12, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5635),
                            Description = "Zbieranie wymagań i projektowanie modelu danych dla ERP.",
                            Name = "Analiza biznesowa systemu ERP",
                            Price = 14000,
                            StartDate = new DateTime(2025, 7, 22, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5635),
                            Status = 0,
                            Tags = "[\"ERP\",\"SQL\",\"Business Analysis\"]",
                            UserId = 18
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2025, 8, 8, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5637),
                            Description = "Stworzenie architektury hurtowni danych dla systemu BI.",
                            Name = "Projekt hurtowni danych",
                            Price = 10000,
                            StartDate = new DateTime(2025, 8, 14, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5638),
                            Status = 1,
                            Tags = "[\"ETL\",\"Data Warehouse\",\"BI\"]",
                            UserId = 18
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2025, 8, 13, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5645),
                            Description = "Projekt aplikacji webowej do obsługi zgłoszeń klientów.",
                            Name = "System zgłoszeń helpdesk",
                            Price = 1500,
                            StartDate = new DateTime(2025, 8, 15, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5646),
                            Status = 0,
                            Tags = "[\"Helpdesk\",\"ASP.NET Core\",\"Support\"]",
                            UserId = 19
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2025, 8, 14, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5648),
                            Description = "Stworzenie panelu admina do zarządzania zgłoszeniami i SLA.",
                            Name = "Panel administracyjny dla helpdesk",
                            Price = 1000,
                            StartDate = new DateTime(2025, 8, 19, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5648),
                            Status = 1,
                            Tags = "[\"Admin Panel\",\"Support\",\"WebApp\"]",
                            UserId = 19
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2025, 8, 2, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5651),
                            Description = "Budowa prostego CMS do zarządzania artykułami IT.",
                            Name = "System zarządzania treściami",
                            Price = 4500,
                            StartDate = new DateTime(2025, 8, 11, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5651),
                            Status = 0,
                            Tags = "[\"CMS\",\"ASP.NET Core\",\"Content Management\"]",
                            UserId = 20
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2025, 8, 10, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5654),
                            Description = "Projekt REST API do eksportu danych do Excela i PDF.",
                            Name = "Moduł API do generowania raportów",
                            Price = 2500,
                            StartDate = new DateTime(2025, 8, 18, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5654),
                            Status = 1,
                            Tags = "[\"API\",\"REST\",\"Reporting\"]",
                            UserId = 20
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2025, 7, 27, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5657),
                            Description = "Migracja starej aplikacji .NET Framework do .NET 8.",
                            Name = "Refaktoryzacja aplikacji legacy",
                            Price = 9000,
                            StartDate = new DateTime(2025, 8, 4, 15, 12, 4, 927, DateTimeKind.Utc).AddTicks(5657),
                            Status = 0,
                            Tags = "[\".NET\",\"Refactoring\",\"Migration\"]",
                            UserId = 20
                        });
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.JobPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("JobPhoto", (string)null);
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.JobRequest", b =>
                {
                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("JobId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("JobRequests");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.JobsUser", b =>
                {
                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("JobsUser");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte>("Rate")
                        .HasColumnType("tinyint");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Rating", (string)null);
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Employee"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Employer"
                        });
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Krs")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("KRS");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NIP");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Warsaw, Aleje Jerozolimskie 5",
                            CompanyName = "GoodCompany",
                            Country = "Poland",
                            Description = "Doświadczony programista .NET i Java z pasją do nowych technologii.",
                            Email = "john.smith@gmail.com",
                            FirstName = "John",
                            Krs = "0123456789",
                            LastName = "Smith",
                            Nip = "0123456789",
                            PasswordHash = "AQAAAAIAAYagAAAAEP04a1FSgbzEKa4WnKXUkdvAjXProoOKRB1WFTT/CqblpSTW4JavR15nvGag72yr4Q==",
                            RoleId = 1,
                            Tags = "[\".NET\",\"Java\",\"C#\",\"SQL\",\"Azure\",\"Microservices\"]"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Krakow, Main Street 12",
                            CompanyName = "DevMasters",
                            Country = "Poland",
                            Description = "Senior developer z wieloletnim doświadczeniem w pracy z chmurą Azure.",
                            Email = "michael.brown@gmail.com",
                            FirstName = "Michael",
                            Krs = "9876543210",
                            LastName = "Brown",
                            Nip = "1234567890",
                            PasswordHash = "AQAAAAIAAYagAAAAEN2+1N5FQkxCv232fKWcTMIOCPc8UPoKryBBG4lyHbzOnzcegRaO4wDz2xJ+Kr48RA==",
                            RoleId = 1,
                            Tags = "[\"C#\",\"Azure\",\"DevOps\",\"Cloud\",\"ASP.NET Core\",\"SQL\"]"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Gdansk, Dluga 1",
                            CompanyName = "WebSolutions",
                            Country = "Poland",
                            Description = "Fullstack developer z doświadczeniem w React i Node.js.",
                            Email = "anna.kowalska@gmail.com",
                            FirstName = "Anna",
                            Krs = "6655443322",
                            LastName = "Kowalska",
                            Nip = "2233445566",
                            PasswordHash = "AQAAAAIAAYagAAAAEFE+5BcxITsJJFVnYKjkAi60eD9F2A6MnvXO5TvbGvlrruIxtroy3yHTTFVoR0JCSw==",
                            RoleId = 1,
                            Tags = "[\"React\",\"Node.js\",\"JavaScript\",\"TypeScript\",\"GraphQL\",\"MongoDB\"]"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Lodz, Piotrkowska 100",
                            CompanyName = "CloudTech",
                            Country = "Poland",
                            Description = "Specjalista backend z dużą wiedzą w zakresie Java i Spring Boot.",
                            Email = "piotr.nowak@gmail.com",
                            FirstName = "Piotr",
                            Krs = "5566778899",
                            LastName = "Nowak",
                            Nip = "9988776655",
                            PasswordHash = "AQAAAAIAAYagAAAAEAlhhKUq2fUc2FUK6Cd+KCHie1aYOVNExy+7lmR9QVOUn1iaCNRSARjeoHWXSk8MHg==",
                            RoleId = 1,
                            Tags = "[\"Java\",\"Spring Boot\",\"Hibernate\",\"Kotlin\",\"Microservices\",\"Docker\"]"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Poznan, Swiety Marcin 45",
                            CompanyName = "UIWorks",
                            Country = "Poland",
                            Description = "Ekspert frontend z doświadczeniem w Angular i TypeScript.",
                            Email = "karolina.mazur@gmail.com",
                            FirstName = "Karolina",
                            Krs = "4333222111",
                            LastName = "Mazur",
                            Nip = "1112223334",
                            PasswordHash = "AQAAAAIAAYagAAAAEKCJmUuQ1fot6ZeHJRsGHWBzpE7z9F0H3A7SnyevFKv57cSvFdThfTLKiqmAc911Zg==",
                            RoleId = 1,
                            Tags = "[\"Angular\",\"TypeScript\",\"RxJS\",\"SCSS\",\"Material UI\",\"HTML5\"]"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Szczecin, Aleja Piastów 10",
                            CompanyName = "SoftBuild",
                            Country = "Poland",
                            Description = "Architekt oprogramowania specjalizujący się w .NET i mikroserwisach.",
                            Email = "pawel.zielinski@gmail.com",
                            FirstName = "Pawel",
                            Krs = "0999888777",
                            LastName = "Zielinski",
                            Nip = "7778889990",
                            PasswordHash = "AQAAAAIAAYagAAAAEIwM+8VNZ4yt7INnXYcDMi+HQI1ooDG+g8OGzQ0xQzv7zm4Q/lnDgZ878n0VrnFbFg==",
                            RoleId = 1,
                            Tags = "[\".NET\",\"Microservices\",\"DDD\",\"CQRS\",\"Azure\",\"Kubernetes\"]"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Warsaw, Nowy Swiat 20",
                            CompanyName = "TestIt",
                            Country = "Poland",
                            Description = "Inżynier QA z doświadczeniem w automatyzacji testów.",
                            Email = "magdalena.wisniewska@gmail.com",
                            FirstName = "Magdalena",
                            Krs = "5544332211",
                            LastName = "Wisniewska",
                            Nip = "1122334455",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ+ur1GGJWfLgJTlRnk53BygCgNQloM6LCF2mQ+EHmyt4EXEfVy+OxUILPMeybZkcg==",
                            RoleId = 1,
                            Tags = "[\"Selenium\",\"Cypress\",\"JUnit\",\"TestNG\",\"Postman\",\"Playwright\"]"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Katowice, Mickiewicza 8",
                            CompanyName = "OpsMasters",
                            Country = "Poland",
                            Description = "Inżynier DevOps specjalizujący się w Docker i Kubernetes.",
                            Email = "adam.lewandowski@gmail.com",
                            FirstName = "Adam",
                            Krs = "9988776655",
                            LastName = "Lewandowski",
                            Nip = "5566778899",
                            PasswordHash = "AQAAAAIAAYagAAAAED1C00wUaEovRABubg+UlTtATJXxjVDSFsL459wtk+xjSUWrr9D7NCU2IPlLwqh75g==",
                            RoleId = 1,
                            Tags = "[\"Docker\",\"Kubernetes\",\"Helm\",\"Terraform\",\"CI/CD\",\"Linux\"]"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Bydgoszcz, Główna 22",
                            CompanyName = "DataVision",
                            Country = "Poland",
                            Description = "Data scientist z doświadczeniem w Python i machine learning.",
                            Email = "dorota.kaczmarek@gmail.com",
                            FirstName = "Dorota",
                            Krs = "5544211332",
                            LastName = "Kaczmarek",
                            Nip = "3322114455",
                            PasswordHash = "AQAAAAIAAYagAAAAEHcPZy0oHLBRiayxQQOtOW0SEbpRNpJGcxFlueNRTNdGsa8pbaT8LMTSQMguiXyHZw==",
                            RoleId = 1,
                            Tags = "[\"Python\",\"ML\",\"Pandas\",\"TensorFlow\",\"PyTorch\",\"Data Mining\"]"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Opole, Krakowska 15",
                            CompanyName = "Appify",
                            Country = "Poland",
                            Description = "Programista aplikacji mobilnych w Flutter i React Native.",
                            Email = "marcin.wozniak@gmail.com",
                            FirstName = "Marcin",
                            Krs = "2211009988",
                            LastName = "Wozniak",
                            Nip = "8899001122",
                            PasswordHash = "AQAAAAIAAYagAAAAEP4W62AuwxKqSnqJIp/xfG2E3GZNsVtNpvjRd6aZ3zBu7q2RsYUK1+1rNMwOZQjc5A==",
                            RoleId = 1,
                            Tags = "[\"Flutter\",\"React Native\",\"Dart\",\"iOS\",\"Android\",\"Firebase\"]"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Bialystok, Aleje Jerozolimskie 5",
                            CompanyName = "PerfectCompany",
                            Country = "Poland",
                            Description = "Firma IT specjalizująca się w rozwiązaniach webowych i mobilnych dla sektora e-commerce.",
                            Email = "jack.smith@gmail.com",
                            FirstName = "Jack",
                            Krs = "0123456789",
                            LastName = "Smith",
                            Nip = "0123456789",
                            PasswordHash = "AQAAAAIAAYagAAAAEPJdSkk94rz4B/inoSJZCdz3cabjlefxFwb2p8SNX8p9vWPeFgMSDwR4ikaKsnZ2/g==",
                            RoleId = 2,
                            Tags = "[\".NET\",\"Java\",\"E-Commerce\",\"Mobile Apps\",\"Cloud\",\"API\"]"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Warsaw, Prosta 4",
                            CompanyName = "HRPlus",
                            Country = "Poland",
                            Description = "Agencja HR oferująca kompleksowe usługi rekrutacyjne i doradztwo personalne.",
                            Email = "lisa.jones@gmail.com",
                            FirstName = "Lisa",
                            Krs = "3213213210",
                            LastName = "Jones",
                            Nip = "1231231230",
                            PasswordHash = "AQAAAAIAAYagAAAAEEDO9Ppa3GloRQp0DBwxaXJpAFYlYOwBrW4MkMSXviYFm7Hrp3JxD6H1YuQR6jyGYw==",
                            RoleId = 2,
                            Tags = "[\"Recruitment\",\"Onboarding\",\"HR\",\"Employer Branding\",\"Talent Sourcing\"]"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Lublin, Krakowskie Przedmieście 33",
                            CompanyName = "MarketLead",
                            Country = "Poland",
                            Description = "Agencja marketingowa zajmująca się kampaniami SEO i reklamami Google Ads.",
                            Email = "tomasz.malinowski@gmail.com",
                            FirstName = "Tomasz",
                            Krs = "7666555444",
                            LastName = "Malinowski",
                            Nip = "4445556667",
                            PasswordHash = "AQAAAAIAAYagAAAAEGgDtcyE3MhXx9j91PRNsSr3q0a80G3YJxbzMK9+wFwXHl4wsyjGVxrL8ZyGKB+3YA==",
                            RoleId = 2,
                            Tags = "[\"SEO\",\"Google Ads\",\"SEM\",\"Content Marketing\",\"Analytics\",\"Copywriting\"]"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Warsaw, Marszalkowska 7",
                            CompanyName = "DesignHub",
                            Country = "Poland",
                            Description = "Studio projektowe tworzące nowoczesne interfejsy i doświadczenia użytkowników.",
                            Email = "ewa.adamska@gmail.com",
                            FirstName = "Ewa",
                            Krs = "4131211101",
                            LastName = "Adamska",
                            Nip = "1011121314",
                            PasswordHash = "AQAAAAIAAYagAAAAEFI9pb5ILt138liwNYSHVFHMOKweZJT42/TExOpRwQfDOj/j3K6fftsuPQC1gHiUJw==",
                            RoleId = 2,
                            Tags = "[\"Figma\",\"UX\",\"UI Design\",\"Prototyping\",\"Adobe XD\",\"Accessibility\"]"
                        },
                        new
                        {
                            Id = 15,
                            Address = "Kielce, Sienkiewicza 11",
                            CompanyName = "BizGrow",
                            Country = "Poland",
                            Description = "Firma doradcza specjalizująca się w obsłudze klientów B2B i negocjacjach handlowych.",
                            Email = "grzegorz.kubiak@gmail.com",
                            FirstName = "Grzegorz",
                            Krs = "0099887766",
                            LastName = "Kubiak",
                            Nip = "6677889900",
                            PasswordHash = "AQAAAAIAAYagAAAAEHn3GI/0LLkIcSPO9RrWg0VI5LLkNUo3iDDQIGOYkiP6ptOl2hI+FrLJWnqk0ysOtg==",
                            RoleId = 2,
                            Tags = "[\"B2B\",\"Negotiations\",\"Sales\",\"Consulting\",\"Partnerships\",\"CRM\"]"
                        },
                        new
                        {
                            Id = 16,
                            Address = "Rzeszow, Grunwaldzka 6",
                            CompanyName = "PMExperts",
                            Country = "Poland",
                            Description = "Firma zajmująca się koordynacją projektów IT w metodykach Agile i Scrum.",
                            Email = "joanna.olszewska@gmail.com",
                            FirstName = "Joanna",
                            Krs = "1100998877",
                            LastName = "Olszewska",
                            Nip = "7788990011",
                            PasswordHash = "AQAAAAIAAYagAAAAENI2iGcn0vodxe7wXL7iAa/oF4/ev43yuc9U9B/m6iMPtOyehLYExFRYZptyBxGnuw==",
                            RoleId = 2,
                            Tags = "[\"Agile\",\"Scrum\",\"Kanban\",\"Project Management\",\"Jira\",\"Confluence\"]"
                        },
                        new
                        {
                            Id = 17,
                            Address = "Gdynia, Skwer Kosciuszki 9",
                            CompanyName = "ITSecure",
                            Country = "Poland",
                            Description = "Dostawca usług IT w zakresie administracji serwerami i bezpieczeństwa sieci.",
                            Email = "krzysztof.urban@gmail.com",
                            FirstName = "Krzysztof",
                            Krs = "2233446655",
                            LastName = "Urban",
                            Nip = "5566443322",
                            PasswordHash = "AQAAAAIAAYagAAAAEKc3AxE3vryIAtYEviqmUCcTcn6Sw8/dUZSSwx99CAoXDS/lMbTznul6+0Lugold5g==",
                            RoleId = 2,
                            Tags = "[\"Linux\",\"Networking\",\"Security\",\"Firewalls\",\"Monitoring\",\"DevSecOps\"]"
                        },
                        new
                        {
                            Id = 18,
                            Address = "Bielsko-Biala, Partyzantów 18",
                            CompanyName = "BizAnalytics",
                            Country = "Poland",
                            Description = "Firma analityczna świadcząca usługi w zakresie analizy biznesowej i baz danych.",
                            Email = "monika.dabrowska@gmail.com",
                            FirstName = "Monika",
                            Krs = "7766554433",
                            LastName = "Dabrowska",
                            Nip = "3344556677",
                            PasswordHash = "AQAAAAIAAYagAAAAECJW4DC7FjJSxtrOgduRjc0h5mFu8Zaftxboa0oxfiZqH2+KenV8WS8Brk4kA5685w==",
                            RoleId = 2,
                            Tags = "[\"SQL\",\"UML\",\"Business Analysis\",\"BI\",\"ETL\",\"Data Warehousing\"]"
                        },
                        new
                        {
                            Id = 19,
                            Address = "Torun, Szeroka 2",
                            CompanyName = "HelpDeskPro",
                            Country = "Poland",
                            Description = "Firma świadcząca wsparcie techniczne oraz konsultacje w obszarze IT.",
                            Email = "dawid.pietrzak@gmail.com",
                            FirstName = "Dawid",
                            Krs = "6655443322",
                            LastName = "Pietrzak",
                            Nip = "2233445566",
                            PasswordHash = "AQAAAAIAAYagAAAAEJAVxHU9UWQ7KgWfc+npL+ZLWF8QktGt8jA+Pgz+2j+tScIsqjxwngq8y9sMYQzMHw==",
                            RoleId = 2,
                            Tags = "[\"Customer Service\",\"ITIL\",\"Helpdesk\",\"Support\",\"Troubleshooting\",\"Windows\"]"
                        },
                        new
                        {
                            Id = 20,
                            Address = "Plock, Tumskie 14",
                            CompanyName = "ContentLab",
                            Country = "Poland",
                            Description = "Agencja kreatywna specjalizująca się w tworzeniu treści marketingowych.",
                            Email = "natalia.sawicka@gmail.com",
                            FirstName = "Natalia",
                            Krs = "5566778899",
                            LastName = "Sawicka",
                            Nip = "9988776655",
                            PasswordHash = "AQAAAAIAAYagAAAAEBj/eJZyvZbxx3Thra+JmmLhs78JcCpcDpDo19KhIlnYCI/CFyoeBMV5QkU+5XfhFA==",
                            RoleId = 2,
                            Tags = "[\"Copywriting\",\"Social Media\",\"Marketing\",\"Storytelling\",\"Branding\",\"Creative\"]"
                        });
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.UserPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserPhoto", (string)null);
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.Job", b =>
                {
                    b.HasOne("Freelancer.Backend.Domain.User", "User")
                        .WithMany("Jobs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Job__UserId__02084FDA");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.JobPhoto", b =>
                {
                    b.HasOne("Freelancer.Backend.Domain.Job", "Job")
                        .WithMany("JobPhotos")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__JobPhoto__JobId__07C12930");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.JobRequest", b =>
                {
                    b.HasOne("Freelancer.Backend.Domain.Job", "Job")
                        .WithMany("JobRequests")
                        .HasForeignKey("JobId")
                        .IsRequired()
                        .HasConstraintName("FK__UserJobs__JobId__03F0984C");

                    b.HasOne("Freelancer.Backend.Domain.User", "User")
                        .WithMany("JobsUser")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserJobs__UserId__02FC7413");

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.JobsUser", b =>
                {
                    b.HasOne("Freelancer.Backend.Domain.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .IsRequired()
                        .HasConstraintName("FK__JobsUsers__JobId__05D8E0BE");

                    b.HasOne("Freelancer.Backend.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__JobsUsers__UserI__04E4BC85");

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.Rating", b =>
                {
                    b.HasOne("Freelancer.Backend.Domain.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Rating__UserId__06CD04F7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.User", b =>
                {
                    b.HasOne("Freelancer.Backend.Domain.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__RoleId__7E37BEF6");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.UserPhoto", b =>
                {
                    b.HasOne("Freelancer.Backend.Domain.User", "User")
                        .WithOne("Photo")
                        .HasForeignKey("Freelancer.Backend.Domain.UserPhoto", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__User__PhotoId__7F2BE32F");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.Job", b =>
                {
                    b.Navigation("JobPhotos");

                    b.Navigation("JobRequests");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Freelancer.Backend.Domain.User", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("JobsUser");

                    b.Navigation("Photo");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
